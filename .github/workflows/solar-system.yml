name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 20
    
      - name: Install Dependencies
        run: npm install
    
      - name: Unit Testing
        run: npm test
          
      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml
      
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Use Node.js version 18 for code coverage
  
      - name: Install Dependencies
        run: npm install
        continue-on-error: true  # Continue to next step even if npm install fails
  
      - name: Run Code Coverage
        run: npm run code-coverage
        continue-on-error: true  # Continue to next step even if code coverage command fails
  
      - name: Upload Code Coverage Reports
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
  
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs:
      - unit-testing
      - code-coverage
    permissions:
      packages: write  # Add permission to write packages
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile  # Adjust if your Dockerfile is in a different location
          push: true
          tags: ghcr.io/${{ github.actor }}/solar-system:${{ github.sha }}

